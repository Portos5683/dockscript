{
    "ace3i.mail.connect-timeoutsun": "5000",
    "ace3i.mail.read-timeout": "15000",
    "ace3i.mail.sparkpost.token": "",
    "ace3i.mail.sparkpost.url": "https://api.sparkpost.com/api/v1/transmissions",
    "admin.email": "<exemple-admin@mail.com>",
    "apis.config.KANNEL.accounts": [
      {
        "defaut": true,
        "password": "foobar",
        "username": "tester"
      }
    ],
    "apis.config.KANNEL.defaut": "true",
    "apis.config.KANNEL.ip-adress": "http://<adresse-serveur-kannel>:13013",
    "apis.config.KANNEL.uris": [
      {
        "id": "knSendSms",
        "method": "GET",
        "name": "Envoi de sms",
        "path": "/cgi-bin/sendsms",
        "req-params": {
          "content": "text",
          "from": "SMSBANKING",
          "password": "password",
          "to": "to",
          "username": "username"
        }
      }
    ],
    "apis.connection-timeout": 2000,
    "apis.read-timeout": 2000,
    "app.assets.images": "${spring.application.basedir}/images",
    "app.assets.templates.jasper": "${spring.application.basedir}/templates/jasper",
    "app.auth.ip-resolver.country-name-key": "countryName",
    "app.auth.ip-resolver.geolocation-db": "http://api.db-ip.com/v2/free",
    "app.client.logo": "logo.png",
    "app.cors.allow-credentials": "true",
    "app.cors.allowed-headers": "Authorization, Content-Type",
    "app.cors.allowed-methods": "GET, OPTIONS, HEAD, PUT, POST, DELETE",
    "app.cors.allowed-origins": "*",
    "app.cors.exposed-headers": "",
    "app.cors.max-age": "1800",
    "app.export.transactions-per-biller.accountingDayManagment": "select parval from acepar where parkey = 'Prise en compte de la gestion de journée comptable'",
    "app.export.transactions-per-biller.cron-expression": "0 0/5 * * * *",
    "app.export.transactions-per-biller.enabled": "true",
    "app.export.transactions-per-biller.file-extension": ".csv",
    "app.export.transactions-per-biller.lastAccountingDate": "select d.daydate from epday d where d.daysta = 1  order by d.daydate desc limit 1",
    "app.export.transactions-per-biller.output-folder": "${spring.application.basedir}/export/ouput",
    "app.export.transactions-per-biller.processed-folder": "${spring.application.basedir}/export/processed",
    "app.export.transactions-per-biller.query.fetchSize": "10000",
    "app.export.transactions-per-biller.query.pageSize": "10000",
    "app.export.transactions-per-biller.query.trsFromClause": "FROM eptrsl l LEFT JOIN ( SELECT ovrid, prdid, ovrdcp, trscptname, ovrtrn FROM aceovr UNION ALL SELECT ovrid, prdid, ovrdcp, trscptname, ovrtrn FROM eptrschk UNION ALL SELECT ovrid, prdid, ovrdcp, trscptname, ovrtrn FROM eptrsesp ) t ON t.ovrid = l.ovrid LEFT JOIN epprd p on p.prdid = t.prdid LEFT JOIN epbil b on p.useid = b.useid",
    "app.export.transactions-per-biller.query.trsSelectClause": "SELECT l.trslmon as transactionAmount,l.trslref as reference,l.trslncp as transactionAccount,l.trslmove as movement,l.trslpayer as payer,t.ovrdcp as date,l.trslstu as status,p.prdcode as productCode,p.prdname as productName,b.bilcod as billerCode,t.trscptname as accountOwner,t.ovrtrn as transactionNumber",
    "app.export.transactions-per-biller.query.trsWhereClause": "WHERE b.bilcod = ? and to_char(t.ovrdcp, 'YYYY-MM-DD') = ?",
    "app.generate-paiements-not-notified-to-billers-report.after-processing-folder": "${user.home}/files/afterProcessingFolder",
    "app.generate-paiements-not-notified-to-billers-report.cron-expression": "0 26 9 * * *",
    "app.generate-paiements-not-notified-to-billers-report.enabled": "true",
    "app.generate-paiements-not-notified-to-billers-report.file-extension": ".xls",
    "app.generate-paiements-not-notified-to-billers-report.mailProperties.defaultTo": "<exemple-destinataire-mail-payement-non-notifié@mail.com>",
    "app.generate-paiements-not-notified-to-billers-report.mailProperties.from": "<exemple-expéditeur-mail-payement-non-notifié@mail.com>",
    "app.generate-paiements-not-notified-to-billers-report.mailProperties.mimeType": "application/vnd.ms-excel",
    "app.generate-paiements-not-notified-to-billers-report.mailProperties.subject": "Rapport des transactions non notifiées aux facturiers",
    "app.generate-paiements-not-notified-to-billers-report.prefix": "Liste_paiements_non_notifiés_aux_facturiers_",
    "app.generate-paiements-not-notified-to-billers-report.receipts-folder": "${user.home}/files/paiementsNotNotifiedToBillersReports",
    "app.load.clients.cron-expression": "0/1 * * * * *",
    "app.load.clients.delimiter": ";",
    "app.load.clients.enabled": "true",
    "app.load.clients.file-extension": ".csv",
    "app.load.clients.input-folder": "${user.home}/load/input",
    "app.load.clients.processed-folder": "${user.home}/load/processed",
    "app.load.transactions.date-format": "yyyy-MM-dd",
    "app.load.transactions.delimiter": ";",
    "app.load.transactions.file-extension": ".csv",
    "app.load.transactions.input-folder": "${user.home}/load/reconciliation/input",
    "app.load.transactions.processed-folder": "${user.home}/load/reconciliation/processed",
    "app.locale.language": "fr",
    "app.logoutFilter.enabled": "true",
    "baseUrl": "${gateway.url}",
    "connector.amplitude.enabled": "true",
    "<connector.amplitude.host": "https://<adresse-connecteur-amplitude>:8300",
    "connector.amplitude.url.checkAccountAuthorization": "${connector.amplitude.host}/api/data/comptes/{numCompte}/statut",
    "connector.amplitude.url.checkSuccessPayment": "${connector.amplitude.host}/api/payment/check-success-payment",
    "connector.amplitude.url.confirmPayment": "${connector.amplitude.host}/api/payment/do-payment",
    "connector.amplitude.url.getCustomers": "${connector.amplitude.host}/api/data/clients",
    "connector.amplitude.url.getCustomersAmount": "${connector.amplitude.host}/api/data/clients/amount",
    "connector.amplitude.url.getManagers": "${connector.amplitude.host}/api/data/gestionnaires",
    "connector.api-key.ky": "ThisIsTheNewKey!",
    "connector.api-key.order-lifetime": "30",
    "connector.api-key.validity-time": "3650",
    "connector.connect-timeout": "600000",
    "connector.iso20022.enabled": "false",
    "connector.iso20022.host": "<adresse-connecteur-iso20022>:8302",
    "connector.iso20022.url.confirmPayment": "${connector.iso20022.host}/v1/pain002/{pmIntId}",
    "connector.iso20022.url.doPayment": "${connector.iso20022.host}/v1/pain001",
    "connector.logging-display-request-header-with-jwtToken": "false",
    "connector.logging-display-request-jwtToken": "false",
    "connector.read-timeout": "500000",
    "connector.sunu.credentials.password": "<mot-de-passe-connecteur-sunu>",
    "connector.sunu.credentials.username": "<nom-utilisateur-connecteur-sunu>",
    "connector.sunu.enabled": "false",
    "connector.sunu.host": "http://<adresse-connecteur-sunu>:8383",
    "connector.sunu.url.checkAccountAuthorization": "http://<adresse-connecteur-sunu>:8082/api/supernet/account/getAutorization",
    "connector.sunu.url.confirmPayment": "http://<adresse-connecteur-sunu>:8082/api/supernet/account/doFPayment",
    "connector.sunu.url.getCustomers": "http://<adresse-connecteur-sunu>:8082/api/supernet/account//getCustomers",
    "connector.sunu.url.getManagers": "http://<adresse-connecteur-sunu>:8082/api/supernet/account/getManagers",
    "connector.sunu.url.getToken": "http://<adresse-connecteur-sunu>:8082/authentication/v2/token",
    "cron.biller-notifications.enabled": "true",
    "cron.biller-notifications.expression": "0/10 * * * * *",
    "cron.campagnePlannedProcess.enabled": "false",
    "cron.campagnePlannedProcess.expression": "0 0/1 * * * *",
    "cron.check-success-payment.enabled": "false",
    "cron.check-success-payment.expression": "0/5 * * * * *",
    "cron.remove-user-notActivated.expression": "0/5 * * * * *",
    "cron.renvoiMail.delai": "0/5 * * * * *",
    "cron.renvoiMail.enabled": "false",
    "cron.smsRenvoi.enabled": "false",
    "cron.smsRenvoi.expression": "0 0/2 * * * *",
    "cron.transaction-validation.enabled": "false",
    "cron.transaction-validation.expression": "0/5 * * * * *",
    "files-integration.inprocess-folder": "${user.home}/files/uploaded",
    "gateway.url": "https://<adresse-serveur-epaiement>",
    "logging.config": "file:${spring.application.basedir}/conf/logback-spring.xml",
    "logging.file.path": "${spring.application.basedir}/logs",
    "mailapis.config.DEFAULT.defaut": "true",
    "mailapis.config.SPARKPOST.defaut": "false",
    "management.endpoint.health.show-details": "always",
    "management.endpoint.info.enabled": "true",
    "management.endpoints.web.cors.allow-credentials": "true",
    "management.endpoints.web.cors.allowed-headers": "*",
    "management.endpoints.web.cors.allowed-methods": "GET, OPTIONS, HEAD, PUT, POST",
    "management.endpoints.web.cors.allowed-origins": "",
    "management.endpoints.web.cors.exposed-headers": "",
    "management.endpoints.web.cors.max-age": "1800",
    "mbanking.fees.reference.bTwFailedNotif": "FRSB2WFN",
    "mbanking.fees.reference.balanceEnquiry": "FRSBBE",
    "mbanking.fees.reference.bankToBank": "FRSB2B",
    "mbanking.fees.reference.bankToWallet": "FRSB2W",
    "mbanking.fees.reference.miniStatement": "FRSBMS",
    "mbanking.fees.reference.walletToBank": "FRSW2B",
    "security.oauth2.client.access-token-uri": "https://ace3i-epaiement-core:8080/oauth/token",
    "security.oauth2.client.client-id": "epaiement_service",
    "security.oauth2.client.client-secret": "adminafrica",
    "security.oauth2.client.grant-type": "client_credentials",
    "security.oauth2.resource.jks.alias": "selfsigned",
    "security.oauth2.resource.jks.key": "password",
    "security.oauth2.resource.jks.path": "file:${spring.application.basedir}/conf/keystore.jks",
    "server.port":"8080",
    "server.tomcat.accesslog.buffered": "false",
    "server.tomcat.accesslog.directory": "logs",
    "server.tomcat.accesslog.enabled": "true",
    "server.tomcat.accesslog.max-days": "3",
    "server.tomcat.accesslog.rename-on-rotate": "true",
    "server.tomcat.accesslog.rotate": "true",
    "server.tomcat.accesslog.suffix": ".json",
    "server.tomcat.basedir": "${spring.application.basedir}/tomcat",
    "sms.input.contacts": "${spring.application.basedir}/input/contacts",
    "spring.application.basedir": "${user.home}/.${spring.application.name}",
    "spring.application.description": "Application de paiement en ligne",
    "spring.application.name": "epaiement-online",
    "spring.batch.job.enabled": "false",
    "spring.cache.jcache.config": "file:${spring.application.basedir}/conf/ehcache.xml",
    "spring.datasource.database": "<nom-base-de-données-epaiement>",
    "spring.datasource.driver-class-name": "org.postgresql.Driver",
    "spring.datasource.hostname": "<adresse-serveur-base-de-données-epaiement>",
    "spring.datasource.initialization-mode": "always",
    "spring.datasource.password": "<mot-de-passe-utilisateur-base-de-données-epaiement>",
    "spring.datasource.port": "<port-base-de-données-epaiement[5432]>",
    "spring.datasource.url": "jdbc:postgresql://${spring.datasource.hostname}:${spring.datasource.port}/${spring.datasource.database}",
    "spring.datasource.username": "<nom-utilisateur-base-de-données-epaiement>",
    "spring.jackson.serialization.FAIL_ON_EMPTY_BEANS": "false",
    "spring.jmx.default-domain": "epaiement-online",
    "spring.jpa.database": "postgresql",
    "spring.jpa.database-platform": "org.hibernate.dialect.PostgreSQL9Dialect",
    "spring.jpa.hibernate.ddl-auto": "update",
    "spring.jpa.hibernate.naming.physical-strategy": "org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl",
    "spring.jpa.properties.hibernate.enable_lazy_load_no_trans": "true",
    "spring.mail.from": "<exemple-expéditeur-mail-epaiement@mail.com>",
    "spring.mail.host": "<adresse-serveur-mail>",
    "spring.mail.password": "<mot-de-passe-utilisateur-serveur-mail>",
    "spring.mail.port": "<port-serveur-mail>",
    "spring.mail.properties.mail.smtp.auth": "true",
    "spring.mail.properties.mail.smtp.socketFactory.fallback": "true",
    "spring.mail.properties.mail.smtp.ssl.enable": "false",
    "spring.mail.properties.mail.smtp.starttls.enable": "false",
    "spring.mail.protocol": "smtp",
    "spring.mail.test-connection": "false",
    "spring.mail.username": "<utilisateur-serveur-mail>",
    "spring.redis.database": "0",
    "spring.redis.host": "<adresse-serveur-redis>",
    "spring.redis.password": "<mot-de-passe-serveur-redis>",
    "spring.redis.port": "<port-serveur-redis>",
    "spring.redis.timeout": "60000",
    "spring.thymeleaf.prefix": "file:${spring.application.basedir}/templates/mail/"
  }